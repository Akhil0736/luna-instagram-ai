# Luna AI Production Docker Compose
version: '3.8'

services:
  luna-ai:
    build: .
    container_name: luna_ai_production
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL}
      - UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
    networks:
      - luna-network
    depends_on:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.luna-ai.rule=Host(`api.luna-ai.com`)"
      - "traefik.http.routers.luna-ai.tls=true"
      - "traefik.http.routers.luna-ai.tls.certresolver=letsencrypt"

  # Reverse proxy with SSL
  traefik:
    image: traefik:v2.10
    container_name: luna_traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@luna-ai.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - luna-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: luna_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - luna-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: luna_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=luna_admin_password
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - luna-network

  # Application monitoring
  monitoring:
    build:
      context: .
      dockerfile: Dockerfile.monitoring
    container_name: luna_monitoring
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
    networks:
      - luna-network

networks:
  luna-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
