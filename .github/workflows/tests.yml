name: Luna AI Tests

on: 
  push:
    branches: [ main, implementation/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
        
    - name: Run research integration tests
      run: |
        python -m pytest implementation/tests/test_research_integration.py -v
      
    - name: Run agent tests
      run: |
        python -m pytest implementation/tests/test_agents.py -v
      
    - name: Run integration tests  
      run: |
        python -m pytest implementation/tests/test_integration.py -v
        
    - name: Generate coverage report
      run: |
        pytest --cov=implementation --cov-report=xml --cov-report=html
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
        
    - name: Upload test results
      uses: actions/upload-artifact@v4  
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          .pytest_cache/
          coverage.xml

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy
        
    - name: Run Black (code formatting)
      run: black --check --diff implementation/
      
    - name: Run Flake8 (code linting)
      run: flake8 implementation/ --max-line-length=100 --ignore=E203,W503
      
    - name: Run MyPy (type checking)
      run: mypy implementation/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Run Bandit (security linting)
      run: bandit -r implementation/ -f json -o bandit-report.json
      continue-on-error: true
      
    - name: Run Safety (dependency vulnerability check)
      run: safety check --json --output safety-report.json
      continue-on-error: true
      
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
